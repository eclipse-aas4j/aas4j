#
# Copyright (c) 2021 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e. V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
@prefix dash: <http://datashapes.org/dash#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix aas: <https://admin-shell.io/aas/3/0/RC02/> .
@base <https://admin-shell.io/aas/3/0/RC02/> .


# AASd-002
aas:IdShortShape a sh:NodeShape ;
  sh:targetClass aas:Referable ;
  sh:property [
      a sh:PropertyShape ;
      sh:path <https://admin-shell.io/aas/3/0/RC02/Referable/idShort> ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:message "(IdShortShape): idShort of Referables shall only feature letters, digits, underscore (\"_\"); starting mandatory with a letter. I.e. [a-zA-Z][a-zA-Z0-9_]+."^^xsd:string ;
      sh:pattern "^[a-zA-Z]\\w*$"^^xsd:string ;
    ] ;
.


# AASd-005
aas:RevisionRequiresVersionShape
	a sh:NodeShape ;
	sh:targetClass aas:AdministrativeInformation ;
	sh:message "(RevisionRequiresVersionShape): AASd-005 - A revision requires a version." ^^xsd:string ;
	sh:or (
		[
			sh:property [
				sh:path <https://admin-shell.io/aas/3/0/RC02/AdministrativeInformation/revision> ;
				sh:minCount 0 ;
				sh:maxCount 0 ;
			]
		]
		[
			sh:and (
				sh:property [
					sh:path <https://admin-shell.io/aas/3/0/RC02/AdministrativeInformation/revision> ;
					sh:minCount 1 ;
					sh:maxCount 1 ;
				]
				sh:property [
					sh:path <https://admin-shell.io/aas/3/0/RC02/AdministrativeInformation/version> ;
					sh:minCount 1 ;
					sh:maxCount 1 ;
				]
			)
		]
	)
.

# AASd-006
aas:AASd-006Shape  a sh:NodeShape ;
  sh:targetClass aas:Qualifier ;
  sh:sparql [
    a sh:SPARQLConstraint ;
    sh:message "If both, the value and the valueId of a Qualifier are present then the value needs to be identical to the value of the referenced coded value in Qualifier/valueId." ;
    sh:select """
      SELECT ?qualifier ?value
         WHERE {
           ?qualifier <https://admin-shell.io/aas/3/0/RC02/Qualifier/value> ?value .
           ?qualifier <https://admin-shell.io/aas/3/0/RC02/Qualifier/valueId> ?valueId .
           ?valueId <https://admin-shell.io/aas/3/0/RC02/Reference/keys> ?key .
           ?key <https://admin-shell.io/aas/3/0/RC02/Key/value> ?keyValue .

           FILTER (?value != ?keyValue)
      }
          """ ;
  ] ;
.

# AASd-007Shape
aas:AASd-007Shape  a sh:NodeShape ;
sh:targetClass aas:Property;
sh:sparql [
  a sh:SPARQLConstraint ;
  sh:message "If both, the Property/value and the Property/valueId are present then the value of Property/value needs to be identical to the value of the referenced coded value in Property/valueId." ;
  sh:prefixes rdf: ;
  sh:select """
    SELECT ?property ?value WHERE {
         ?property a <https://admin-shell.io/aas/3/0/RC02/Property> .
         ?property <https://admin-shell.io/aas/3/0/RC02/Property/value> ?value .
         ?property <https://admin-shell.io/aas/3/0/RC02/Property/valueId> ?valueId .
         ?valueId <https://admin-shell.io/aas/3/0/RC02/Reference/keys> ?key .
         ?key <https://admin-shell.io/aas/3/0/RC02/Key/value> ?keyValue .

         FILTER (?value != ?keyValue)
    }""" ;
] .

# AASd-008
aas:AASd-008Shape a sh:NodeShape ;
  sh:targetClass aas:Operation ;
  sh:property [
      a sh:PropertyShape ;
      sh:path <https://admin-shell.io/aas/3/0/RC02/HasKind/kind> ;
      sh:class aas:ModelingKind ;
      sh:minCount 1 ;
      sh:minCount 1 ;
      sh:hasValue <https://admin-shell.io/aas/3/0/RC02/ModelingKind/Template> ;
      sh:message "(Operation.kind = Template):The submodel element value of an operation variable shall be of kind=Template."^^xsd:string ;
    ] ;
.

# AASd-014
aas:SelfManagedEntityRequiresAssetIdShape a sh:NodeShape ;
  rdfs:subClassOf aas:SubmodelElementShape ;
  sh:targetClass aas:Entity ;
  sh:message "(SelfManagedEntityRequiresAssetIdShape): AASd-014 - Either the attribute globalAssetId or specificAssetId of an Entity must be set if Entity/entityType is set to “SelfManagedEntity”. They are not existing otherwise." ^^xsd:string ;

  sh:xone(
	[
		sh:and(
			[
				sh:property [
					a sh:PropertyShape ;
					sh:path <https://admin-shell.io/aas/3/0/RC02/Entity/entityType> ;
					sh:minCount 1;
					sh:maxCount 1;
					sh:pattern "SelfManagedEntity";
				];
			]
			[
				sh:xone(
						[
							sh:property [
								sh:path <https://admin-shell.io/aas/3/0/RC02/Entity/globalAssetId>;
								sh:minCount 1;
								sh:maxCount 1;
							];
						]
						[
							sh:property [
								sh:path <https://admin-shell.io/aas/3/0/RC02/Entity/specificAssetId>;
								sh:minCount 1;
								sh:maxCount 1;
							];
						]
					)
			]
		)
	]
	[
	sh:and(
			[
			sh:property [
				a sh:PropertyShape ;
				sh:path <https://admin-shell.io/aas/3/0/RC02/Entity/entityType> ;
				sh:minCount 1;
				sh:maxCount 1;
				sh:pattern "CoManagedEntity";
			];
			]
			[
				sh:property [
					sh:path <https://admin-shell.io/aas/3/0/RC02/Entity/globalAssetId>;
					sh:minCount 0;
					sh:maxCount 0;
			];
			]
			[
				sh:property [
					sh:path <https://admin-shell.io/aas/3/0/RC02/Entity/specificAssetId>;
					sh:minCount 0;
					sh:maxCount 0;
				];
			]
		)
	]
)
.

# AASd-015
aas:AASd-015Shape  a sh:NodeShape ;
  sh:targetClass aas:AccessControl;
  sh:sparql [
    a sh:SPARQLConstraint ;
    sh:message "(AASd-015Shape) - The data element SubjectAttributes/subjectAttribute shall be part of the submodel that is referenced within the “selectableSubjectAttributes” attribute of “AccessControl”" ;
    sh:select """
      SELECT ?submodelElement WHERE {
           ?accessControl  <https://admin-shell.io/aas/3/0/RC02/AccessControl/selectableSubjectAttributes> ?submodel .
           ?submodel  <https://admin-shell.io/aas/3/0/RC02/Submodel/submodelElement> ?submodelElement .
		       ?submodelElement <https://admin-shell.io/aas/3/0/RC02/AccessPermissionRule/targetSubjectAttributes> ?subjectAttribute .
		       ?subjectAttribute  <https://admin-shell.io/aas/3/0/RC02/SubjectAttributes/subjectAttribute> ?dataElement .
    }"""
  ] ;
.

# AASd-020
aas:AASd-020Shape  a sh:NodeShape ;
  sh:targetClass aas:Qualifier ;
  sh:property [
      a sh:PropertyShape ;
      sh:path <https://admin-shell.io/aas/3/0/RC02/Qualifier/value> ;
      sh:sparql [
      	a sh:SPARQLConstraint ;
      	sh:message "(AASd-020Shape) - The value of Qualifier/value shall be consistent to the data type as defined in Qualifier/valueType." ;
      	sh:select """
      	  SELECT ?this ?value ?claimedValueType WHERE {
      		?this <https://admin-shell.io/aas/3/0/RC02/Qualifier/value> ?value .
            ?this <https://admin-shell.io/aas/3/0/RC02/Qualifier/valueType> ?claimedValueType .

            # reference for the constructor functions: https://www.w3.org/TR/2013/REC-sparql11-query-20130321/#FunctionMapping
            BIND(IF( <http://www.w3.org/2001/XMLSchema#dateTime>(?value), true, false) AS ?isDateTime)
            BIND(IF( <http://www.w3.org/2001/XMLSchema#boolean>(?value), true, false) AS ?isBoolean)
            BIND(IF( <http://www.w3.org/2001/XMLSchema#integer>(?value), true, false) AS ?isInteger)
            BIND(IF( <http://www.w3.org/2001/XMLSchema#double>(?value), true, false) AS ?isDouble)
            BIND(IF( <http://www.w3.org/2001/XMLSchema#long>(?value), true, false) AS ?isLong)
            BIND(IF( <http://www.w3.org/2001/XMLSchema#float>(?value), true, false) AS ?isFloat)
            BIND( isURI(?value) AS ?isUri)
            BIND( isIRI(?value) AS ?isIri)
            BIND(IF( <http://www.w3.org/2001/XMLSchema#string>(?value), true, false) AS ?isString)

            FILTER( ?claimedValueType = "integer" || ?claimedValueType = "int" || ?claimedValueType = "boolean" || ?claimedValueType = "dateTime" || ?claimedValueType = "double" || ?claimedValueType = "long" || ?claimedValueType = "float" || ?claimedValueType = "uri" || ?claimedValueType = "iri" || ?claimedValueType = "string" )

            FILTER( IF( ?claimedValueType = "dateTime", IF(BOUND(?isDateTime), false, true), true ) )
            FILTER( IF( ?claimedValueType = "boolean", IF(BOUND(?isBoolean), false, true), true ) )
            FILTER( IF( ?claimedValueType = "long", IF(BOUND(?isLong), false, true), true ) )
            FILTER( IF( ?claimedValueType = "float", IF(BOUND(?isFloat), false, true), true ) )
            FILTER( IF( ?claimedValueType = "integer" || ?claimedValueType = "int", IF(BOUND(?isInteger), false, true), true ) )
            FILTER( IF( ?claimedValueType = "double", IF(BOUND(?isDouble), false, true), true ) )
            FILTER( IF( ?claimedValueType = "string", IF(BOUND(?isString), false, true), true ) )
            FILTER( IF( ?claimedValueType = "uri", IF(?isUri, false, true), true ) )
            FILTER( IF( ?claimedValueType = "iri", IF(?isIri, false, true), true ) )
          }
      	"""
     ]
    ];
.

# AASd-021
aas:AASd-021Shape  a sh:NodeShape ;
  sh:targetClass aas:Qualifiable ;
  sh:property [
      a sh:PropertyShape ;
      sh:path <https://admin-shell.io/aas/3/0/RC02/Qualifiable/valueType> ;
      sh:sparql [
      	a sh:SPARQLConstraint ;
      	sh:message "(AASd-021Shape) - Every Qualifiable can only have one Qualifier with the same Qualifier/type." ;
      	sh:select """
      	  SELECT ?qualifiable WHERE {
      	    ?qualifiable <https://admin-shell.io/aas/3/0/RC02/Qualifiable/qualifier> ?qualifier1 .
      	    ?qualifiable <https://admin-shell.io/aas/3/0/RC02/Qualifiable/qualifier> ?qualifier2 .
            ?qualifier1 <https://admin-shell.io/aas/3/0/RC02/Qualifier/valueType> ?valueType1 .
            ?qualifier2 <https://admin-shell.io/aas/3/0/RC02/Qualifier/valueType> ?valueType2 .
      		FILTER (str(?valueType1) = str(?valueType2) )
      	  }
      	"""
     ]
    ];
.

# AASd-023
#aas:AASd-023Shape  a sh:NodeShape ;
  #sh:targetClass aas:AssetInformation;
  #sh:sparql [
    #a sh:SPARQLConstraint ;
    #sh:message "AssetInformation/globalAssetId either is a reference to an Asset object or a global reference." ;
    #sh:select """
      #SELECT ?keyType
         #WHERE {
           #?assetInformation a <https://admin-shell.io/aas/3/0/RC02/AssetInformation> .
           #?assetInformation  <https://admin-shell.io/aas/3/0/RC02/AssetInformation/globalAssetId> ?globalAssetId .
           #?globalAssetId <https://admin-shell.io/aas/3/0/RC02/Reference/keys> ?key .
           #?key <https://admin-shell.io/aas/3/0/RC02/Key/type> ?keyType .
           #FILTER (?keyType != <https://admin-shell.io/aas/3/0/RC02/IdentifiableElements/Asset> && ?keyType != <https://admin-shell.io/aas/3/0/RC02/KeyElements/GlobalReference>)

      #}
          #""" ;
#] .

# AASd-026
# aas:AASd-026Shape a sh:NodeShape ;
    #sh:targetClass aas:SubmodelElementCollection ;
    #sh:prefixes xsd: ;
    #sh:sparql [
       #a sh:SPARQLConstraint ;
       #sh:message "If allowDuplicates==false then it is not allowed that the collection contains several elements with the same semantics (i.e. the same semanticId)." ;
       #sh:select """
         #SELECT ?keyType
            #WHERE {
              #?SubmodelElementCollection a <https://admin-shell.io/aas/3/0/RC02/SubmodelElementCollection> .
              #?SubmodelElementCollection  <https://admin-shell.io/aas/3/0/RC02/Referable/idShort> ?SubmodelElementCollectionIdShort .
              #?SubmodelElementCollection <https://admin-shell.io/aas/3/0/RC02/SubmodelElementCollection/allowDuplicates> "False"^^xsd:boolean.

              #?SubmodelElementCollection <https://admin-shell.io/aas/3/0/RC02/SubmodelElementCollection/value> ?Value1 .
              #?Value1 <https://admin-shell.io/aas/3/0/RC02/HasSemantics/semanticId> ?Value1SemanticId .
              #?Value1SemanticId <https://admin-shell.io/aas/3/0/RC02/Reference/keys> ?Value1Key .
              #?Value1Key <https://admin-shell.io/aas/3/0/RC02/Key/type> ?Value1KeyType .
              #?Value1Key <https://admin-shell.io/aas/3/0/RC02/Key/value> ?Value1KeyValue .
              #?Value1Key <https://admin-shell.io/aas/3/0/RC02/Key/idType> ?Value1KeyIdType .

              #?SubmodelElementCollection <https://admin-shell.io/aas/3/0/RC02/SubmodelElementCollection/value> ?Value2 .
              #?Value2 <https://admin-shell.io/aas/3/0/RC02/HasSemantics/semanticId> ?Value2SemanticId .
              #?Value2SemanticId <https://admin-shell.io/aas/3/0/RC02/Reference/keys> ?Value2Key .
              #?Value2Key <https://admin-shell.io/aas/3/0/RC02/Key/type> ?Value2KeyType .
              #?Value2Key <https://admin-shell.io/aas/3/0/RC02/Key/value> ?Value2KeyValue .
              #?Value2Key <https://admin-shell.io/aas/3/0/RC02/Key/idType> ?Value2KeyIdType .


              #FILTER (?Value1SemanticId = ?Value2SemanticId )

         #}
          #   """ ;
    #] .

# AASd-051
aas:ConceptDescriptionAllowedCategories a sh:NodeShape ;
  sh:targetClass aas:ConceptDescription ;

  sh:property [
      a sh:PropertyShape ;
      sh:path <https://admin-shell.io/aas/3/0/RC02/Referable/category> ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
      sh:minCount 0 ;
      sh:pattern "^VALUE|^PROPERTY|^REFERENCE|^DOCUMENT|^CAPABILITY|^RELATIONSHIP|^COLLECTION|^FUNCTION|^EVENT|^ENTITY|^APPLICATION_CLASS|^QUALIFIER|^VIEW";
	  sh:message "A ConceptDescription shall have one of the following categories: VALUE, PROPERTY, REFERENCE, DOCUMENT, CAPABILITY, RELATIONSHIP, COLLECTION, FUNCTION, EVENT, ENTITY, APPLICATION_CLASS, QUALIFIER, VIEW." ^^xsd:string ;
    ] ;
.


# AASc-006
aas:ConceptDescriptionWithCategoryDocumentAndIEC61360CorrectDataType a sh:NodeShape ;
  sh:targetClass aas:ConceptDescription;
  sh:sparql [
  a sh:SPARQLConstraint ;
  sh:message "For a ConceptDescription with category DOCUMENT using data specification template IEC61360 (http://admin-shell.io/DataSpecificationTemplates/DataSpecificationIEC61360/2/0) - DataSpecificationIEC61360/dataType shall be one of the following values: String or URL." ;

  sh:select """
  	SELECT ?conceptDescription
  		WHERE {
			?element a <https://admin-shell.io/aas/3/0/RC02/ConceptDescription> .
			?conceptDescription <https://admin-shell.io/aas/3/0/RC02/Referable/category> "DOCUMENT" .
			?conceptDescription <https://admin-shell.io/aas/3/0/RC02/HasDataSpecification/embeddedDataSpecification> ?embeddedDataSpecification .
			?embeddedDataSpecification <https://admin-shell.io/aas/3/0/RC02/EmbeddedDataSpecification/dataSpecificationContent> ?dataSpecification .
			?dataSpecification <https://admin-shell.io/aas/3/0/RC02/DataSpecificationIEC61360/dataType> ?dataType .
			FILTER(?dataType != <https://admin-shell.io/aas/3/0/RC02/DataTypeIEC61360/Iri> && ?dataType != <https://admin-shell.io/aas/3/0/RC02/DataTypeIEC61360/String>)
		}
        """ ;
] .

# AASc-008
aas:ConceptDescriptionDefinitionInEnglishIfNotValueCategory a sh:NodeShape ;
  sh:targetClass aas:ConceptDescription ;
  
  sh:sparql [
  a sh:SPARQLConstraint ;
  sh:message "For all ConceptDescriptions except for ConceptDescriptions of category VALUE using data specification template IEC61360 (https://admin-shell.io/aas/3/0/RC02/DataSpecificationIEC61360/definition) - DataSpecificationIEC61360/definition is mandatory and shall be defined at least in English." ;
  sh:prefixes rdf: ;
  sh:select """
  	SELECT ?dataSpecification
  		WHERE {
			?conceptDescription a <https://admin-shell.io/aas/3/0/RC02/ConceptDescription> .
			MINUS {
				?conceptDescription a <https://admin-shell.io/aas/3/0/RC02/ConceptDescription> .
				?conceptDescription <https://admin-shell.io/aas/3/0/RC02/HasDataSpecification/embeddedDataSpecifications> ?embeddedDataSpecificationEn .
				?embeddedDataSpecificationEn <https://admin-shell.io/aas/3/0/RC02/EmbeddedDataSpecification/dataSpecificationContent> ?dataSpecificationEn .
				?dataSpecificationEn <https://admin-shell.io/aas/3/0/RC02/DataSpecificationIEC61360/definition> ?preferredNameEn .
				FILTER(LANGMATCHES(LANG(?preferredNameEn), "en"))
			}
			?conceptDescription <https://admin-shell.io/aas/3/0/RC02/Referable/category> ?category .
			FILTER (?category != "VALUE")
			?conceptDescription <https://admin-shell.io/aas/3/0/RC02/HasDataSpecification/embeddedDataSpecifications> ?embeddedDataSpecification .
			?embeddedDataSpecification <https://admin-shell.io/aas/3/0/RC02/EmbeddedDataSpecification/dataSpecificationContent> ?dataSpecification .
		}
        """ ;
] .



# AASd-077
aas:UniqueExtensionNames a sh:NodeShape ;
  sh:targetClass aas:HasExtensions ;
  sh:sparql [
  a sh:SPARQLConstraint ;
  sh:message "The name of an extension within HasExtensions needs to be unique." ;

  sh:select """
  	SELECT ?extensionName
  		WHERE {
			?extension1 a <https://admin-shell.io/aas/3/0/RC02/Extension> .
      ?extension1 <https://admin-shell.io/aas/3/0/RC02/Extension/name> ?extension1Name .

			?extension2 a <https://admin-shell.io/aas/3/0/RC02/Extension> .
      ?extension2 <https://admin-shell.io/aas/3/0/RC02/Extension/name> ?extension2Name .

      ?hasExtensions <https://admin-shell.io/aas/3/0/RC02/HasExtensions/extension> ?extension1 .
      ?hasExtensions <https://admin-shell.io/aas/3/0/RC02/HasExtensions/extension> ?extension2 .

			FILTER(?extension1Name = ?extension2Name )
		}
        """ ;
] .

# AASd-090
aas:DataElementExcludingFileAndBlobCorrectCategory a sh:NodeShape ;
  sh:targetClass aas:DataElement;
  sh:sparql [
  a sh:SPARQLConstraint ;
  sh:message "For data elements DataElement/category shall be one of the following values: Constant, Parameter or Variable. Exception: File and Blob data elements." ;
  sh:prefixes rdf: ;
  sh:select """
  	SELECT ?element
  		WHERE {
  		 	?subclass <http://www.w3.org/2000/01/rdf-schema#subClassOf>+  <https://admin-shell.io/aas/3/0/RC02/DataElement> .
			FILTER(?subclass != <https://admin-shell.io/aas/3/0/RC02/File> && ?subclass != <https://admin-shell.io/aas/3/0/RC02/Blob>)
			?element a ?subclass .
			?element <https://admin-shell.io/aas/3/0/RC02/Referable/category> ?category .
			FILTER(?category != "Constant" && ?category != "Parameter" && ?category != "Variable")
		}
        """ ;
] .


# AASd-100
aas:ReferableShape  a sh:NodeShape ;
  sh:targetClass aas:Referable ;
  sh:property [
      a sh:PropertyShape ;
      sh:path <https://admin-shell.io/aas/3/0/RC02/Referable/category> ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
      sh:minCount 0 ;
      sh:pattern "^(?!\\s*$).+" ;
      sh:message "(Referable.category):An attribute with data type \"string\" is not allowed to be empty."^^xsd:string ;
    ] ;
.
