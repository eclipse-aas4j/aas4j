# This workflow will build a package using Maven and then publish it to GitHub packages when a PR is accepted/new content is pushed
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Publish Snapshot

on:
  pull_request:
    branches: [ main, development, feature/**, bugfix/** ]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up Java and Maven Central credentials
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: central
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.ORG_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Check GPG Private Key Secret
      run: |
        if [ -z "${{ secrets.ORG_GPG_PRIVATE_KEY }}" ]; then
          echo "ORG_GPG_PRIVATE_KEY is not set."
          exit 1
        else
          echo "ORG_GPG_PRIVATE_KEY is set."
        fi

    - name: Check GPG Passphrase Secret
      run: |
        if [ -z "${{ secrets.ORG_GPG_PASSPHRASE }}" ]; then
          echo "ORG_GPG_PASSPHRASE is not set."
          exit 1
        else
          echo "ORG_GPG_PASSPHRASE is set."
        fi

    - name: Build with Maven
      run: |
        mvn --batch-mode verify

    - name: Set env variables
      run: |
        echo "Exporting Variables"
        export version=$(mvn -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec -q)
        echo "VERSION=${version}" >> $GITHUB_ENV

    - name: Deploy SNAPSHOTS
      if:  ${{ endsWith(env.VERSION, '-SNAPSHOT') }}
      run: mvn --batch-mode deploy -P release -DskipTests
      env:
        MAVEN_USERNAME: ${{ secrets.ORG_OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.ORG_OSSRH_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.ORG_GPG_PASSPHRASE }}
        GPG_KEY_ID: ${{ secrets.ORG_GPG_KEY_ID }}
        GPG_PASSPHRASE: ${{ secrets.ORG_GPG_PASSPHRASE }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}